// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Service.KycReports.AutorestClient.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class KycClientStatRow
    {
        /// <summary>
        /// Initializes a new instance of the KycClientStatRow class.
        /// </summary>
        public KycClientStatRow()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the KycClientStatRow class.
        /// </summary>
        public KycClientStatRow(System.DateTime changeDate, string date = default(string), string kycOfficer = default(string), string kycStatus = default(string), string partnerIdName = default(string), string id = default(string), string countryFromIP = default(string), string countryFromID = default(string), string countryFromPOA = default(string), string dateOfExpiryOfID = default(string), string dateOfPoaDocument = default(string), string isDateOfBirthNotEmpty = default(string), string isAddressNotEmpty = default(string), string isCityNotEmpty = default(string), string isZipNotEmpty = default(string), string isPhoneInAnotherAccount = default(string), string isBanned = default(string), string kycSpiderCheckDate = default(string), string isKycSpiderReturnMatches = default(string))
        {
            ChangeDate = changeDate;
            Date = date;
            KycOfficer = kycOfficer;
            KycStatus = kycStatus;
            PartnerIdName = partnerIdName;
            Id = id;
            CountryFromIP = countryFromIP;
            CountryFromID = countryFromID;
            CountryFromPOA = countryFromPOA;
            DateOfExpiryOfID = dateOfExpiryOfID;
            DateOfPoaDocument = dateOfPoaDocument;
            IsDateOfBirthNotEmpty = isDateOfBirthNotEmpty;
            IsAddressNotEmpty = isAddressNotEmpty;
            IsCityNotEmpty = isCityNotEmpty;
            IsZipNotEmpty = isZipNotEmpty;
            IsPhoneInAnotherAccount = isPhoneInAnotherAccount;
            IsBanned = isBanned;
            KycSpiderCheckDate = kycSpiderCheckDate;
            IsKycSpiderReturnMatches = isKycSpiderReturnMatches;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ChangeDate")]
        public System.DateTime ChangeDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Date")]
        public string Date { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "KycOfficer")]
        public string KycOfficer { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "KycStatus")]
        public string KycStatus { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PartnerIdName")]
        public string PartnerIdName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CountryFromIP")]
        public string CountryFromIP { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CountryFromID")]
        public string CountryFromID { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CountryFromPOA")]
        public string CountryFromPOA { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DateOfExpiryOfID")]
        public string DateOfExpiryOfID { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DateOfPoaDocument")]
        public string DateOfPoaDocument { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsDateOfBirthNotEmpty")]
        public string IsDateOfBirthNotEmpty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsAddressNotEmpty")]
        public string IsAddressNotEmpty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsCityNotEmpty")]
        public string IsCityNotEmpty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsZipNotEmpty")]
        public string IsZipNotEmpty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsPhoneInAnotherAccount")]
        public string IsPhoneInAnotherAccount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsBanned")]
        public string IsBanned { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "KycSpiderCheckDate")]
        public string KycSpiderCheckDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsKycSpiderReturnMatches")]
        public string IsKycSpiderReturnMatches { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
